generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Purchase {
  purchaseId     Int            @id @default(autoincrement()) @map("purchase_id")
  purchaseDate   Int            @map("purchase_date")
  boardingPasses BoardingPass[]

  @@map("purchase")
}

model Seat {
  seatId         Int            @id @default(autoincrement()) @map("seat_id")
  seatColumn     String         @map("seat_column") @db.VarChar(2)
  seatRow        Int            @map("seat_row")
  seatTypeId     Int            @map("seat_type_id")
  airplaneId     Int            @map("airplane_id")
  boardingPasses BoardingPass[]
  airplane       Airplane       @relation(fields: [airplaneId], references: [airplaneId], onDelete: Cascade, onUpdate: Restrict, map: "airplane_id_se")
  seatType       SeatType       @relation(fields: [seatTypeId], references: [seatTypeId], onDelete: Cascade, onUpdate: Restrict, map: "seat_type_id_se")

  @@index([airplaneId], map: "airplane_id_se")
  @@index([seatTypeId], map: "seat_type_id_se")
  @@map("seat")
}

model SeatType {
  seatTypeId     Int            @id @default(autoincrement()) @map("seat_type_id")
  name           String         @db.VarChar(255)
  boardingPasses BoardingPass[]
  seats          Seat[]

  @@map("seat_type")
}

model Airplane {
  airplaneId Int      @id @default(autoincrement()) @map("airplane_id")
  name       String   @db.VarChar(255)
  flights    Flight[]
  seats      Seat[]

  @@map("airplane")
}

model Flight {
  flightId        Int            @id @default(autoincrement()) @map("flight_id")
  takeoffDateTime Int            @map("takeoff_date_time")
  takeoffAirport  String         @map("takeoff_airport") @db.VarChar(255)
  landingDateTime Int            @map("landing_date_time")
  landingAirport  String         @map("landing_airport") @db.VarChar(255)
  airplaneId      Int            @map("airplane_id")
  boardingPasses  BoardingPass[]
  airplane        Airplane       @relation(fields: [airplaneId], references: [airplaneId], onDelete: Cascade, onUpdate: Restrict, map: "airplane_id_fl")

  @@index([airplaneId], map: "airplane_id_fl")
  @@map("flight")
}

model BoardingPass {
  boardingPassId Int       @id @default(autoincrement()) @map("boarding_pass_id")
  purchaseId     Int       @map("purchase_id")
  passengerId    Int       @map("passenger_id")
  seatTypeId     Int       @map("seat_type_id")
  seatId         Int?      @map("seat_id")
  flightId       Int       @map("flight_id")
  flight         Flight    @relation(fields: [flightId], references: [flightId], onDelete: Cascade, onUpdate: Restrict, map: "flight_id_bp")
  passenger      Passenger @relation(fields: [passengerId], references: [passengerId], onDelete: Cascade, onUpdate: Restrict, map: "passenger_id_bp")
  purchase       Purchase  @relation(fields: [purchaseId], references: [purchaseId], onDelete: Cascade, onUpdate: Restrict, map: "purchase_id_bp")
  seat           Seat?     @relation(fields: [seatId], references: [seatId], onDelete: Cascade, onUpdate: Restrict, map: "seat_id_bp")
  seatType       SeatType  @relation(fields: [seatTypeId], references: [seatTypeId], onDelete: Cascade, onUpdate: Restrict, map: "seat_type_id_bp")

  @@index([flightId], map: "flight_id_bp")
  @@index([passengerId], map: "passenger_id_bp")
  @@index([purchaseId], map: "purchase_id_bp")
  @@index([seatId], map: "seat_id_bp")
  @@index([seatTypeId], map: "seat_type_id_bp")
  @@map("boarding_pass")
}

model Passenger {
  passengerId   Int            @id @default(autoincrement()) @map("passenger_id")
  dni            String         @db.VarChar(255)
  name           String         @db.VarChar(255)
  age            Int
  country        String         @db.VarChar(255)
  boardingPasses BoardingPass[]

  @@map("passenger")
}
